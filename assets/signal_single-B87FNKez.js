import{r as W,c as j}from"./overlayControls_new-C67KsuMk.js";/* empty css              */import{S as $}from"./signalBatchRenderer-CiFqqyGQ.js";import{h as y,d as q,e as N,M as _,B as J}from"./color-8XwccIkK.js";import"./signalSquare-CzoGnx3u.js";const t={"Signal: Fade Rate":{value:1,type:"range",min:.1,max:3,step:.1,label:"Signal: Fade Rate"},"ECG: Trace Width":{value:4,type:"range",min:.5,max:16,step:.1,label:"ECG: Trace Width"},"ECG: Head Size":{value:10,type:"range",min:2,max:28,step:.5,label:"ECG: Head Dot Size"},"ECG: Trail Life":{value:65,type:"range",min:5,max:200,step:1,label:"ECG: Trail Life %"},"ECG: Overlap":{value:15,type:"range",min:0,max:80,step:1,label:"ECG: Overlap %"},"ECG: Trace Color":{value:"#00ff6a",type:"color",label:"ECG: Trace Color"},"ECG: Grid Size":{value:100,type:"range",min:20,max:160,step:2,label:"ECG: Grid Size"},"ECG: Show Outer Box":{value:!0,type:"checkbox",label:"ECG: Show Outer Box"},"ECG: Show Grid Lines":{value:!0,type:"checkbox",label:"ECG: Show Grid Lines"},"Internal: ECG Sample Resolution":3200,"Internal: ECG Viewport Horizontal Padding":.02,"Internal: ECG Viewport Vertical Padding":.02,"Internal: ECG Heart Rate Drift":!1,"Internal: ECG Show Grid":!0,"Internal: ECG Grid Color":"#00ff6a","Internal: ECG Grid Color Major":"#00ff6a","Internal: ECG Grid Color Panel":"#00ff6a","Internal: ECG Show Grid Background":!0,"Internal: ECG Grid Gap Percent":0,"Internal: Signal Secondary Heart Rate":26,"Internal: Signal Mode":"single","Internal: Signal Rate 2 BPM":26,"Internal: Initial Heart Rate":62,"Internal: Signal A Offsets":[.1,.2,.3,.4],"Internal: Signal B Offset":50,"Internal: Signal CF Offsets":[.15,.3,.45,.6],"Internal: Signal CF Individual Offsets":[150,300,450,600]};W("config",t,{onChange:(e,n,o)=>{if(e==="Signal: Fade Rate"){i&&i.setFadeRate(n);return}if(["ECG: Trace Width","ECG: Head Size","ECG: Trail Life","ECG: Overlap","ECG: Trace Color","ECG: Grid Size","ECG: Show Outer Box","ECG: Show Grid Lines"].includes(e)){if(!a)return;const r={};e==="ECG: Trace Width"?r.lineWidth=n:e==="ECG: Head Size"?r.headDotRadius=n:e==="ECG: Trail Life"?r.trailLifePercent=n:e==="ECG: Overlap"?r.overlapPercent=n:e==="ECG: Trace Color"?(r.colorCore=y(n,.95),a._colorCore=new Float32Array(a.cfg.colorCore)):(e==="ECG: Grid Size"||e==="ECG: Show Outer Box"||e==="ECG: Show Grid Lines")&&G&&G(),Object.keys(r).length>0&&a.updateConfig(r);return}}});function Q(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}const m=document.getElementById("single-container"),I=document.getElementById("single-pulses"),B=document.getElementById("ecg-grid-canvas"),E=document.getElementById("ecg-trace-canvas"),h=document.getElementById("ecg-bpm"),R=document.getElementById("ecg-beats"),f=document.getElementById("ecg-hr"),v=document.getElementById("ecg-val-hr");let i=null,l={a1:!0,a:!1,b:!1,c:!1,d:!1,e:!1,f:!1},c={a1:0,a:0,b:0,c:0,d:0,e:0,f:0},a=null,C=null,G=null;function U(){!E||!B||N({sampleResolution:t["Internal: ECG Sample Resolution"]}).then(()=>{requestAnimationFrame(()=>{const n=E.parentElement.getBoundingClientRect(),o={rows:1,cols:1,heartRateMode:"manual",manualHeartRate:t["Internal: Initial Heart Rate"],overlapPercent:t["ECG: Overlap"].value,trailLifePercent:t["ECG: Trail Life"].value,lineWidth:t["ECG: Trace Width"].value,headDotRadius:t["ECG: Head Size"].value,colorCore:y(t["ECG: Trace Color"].value,.95),gridSize:t["ECG: Grid Size"].value,showGrid:t["Internal: ECG Show Grid"],gridColor:t["Internal: ECG Grid Color"],renderWidth:n.width,renderHeight:n.height,viewportHorizontalPadding:t["Internal: ECG Viewport Horizontal Padding"],viewportVerticalPadding:t["Internal: ECG Viewport Vertical Padding"],heartRateDrift:t["Internal: ECG Heart Rate Drift"]};a=new _(E,o),C=new J(a),C.start(),O(),a.traces[0],a.setHeartRateMode("manual"),a.setManualHeartRate(t["Internal: Initial Heart Rate"]),setTimeout(()=>{const s=t["Internal: Initial Heart Rate"];v&&(v.textContent=s),h&&(h.textContent=s),f&&(f.value=s)},50),X(),Y()})})}function O(){q(B,{rows:1,cols:1,gridSize:t["ECG: Grid Size"].value,gridColorMajor:t["Internal: ECG Grid Color Major"],gridColorPanel:t["Internal: ECG Grid Color Panel"],showGridOuterBox:t["ECG: Show Outer Box"].value,showGridLines:t["ECG: Show Grid Lines"].value,showGridBackground:t["Internal: ECG Show Grid Background"],gridGapPercent:t["Internal: ECG Grid Gap Percent"],viewportHorizontalPadding:t["Internal: ECG Viewport Horizontal Padding"],viewportVerticalPadding:t["Internal: ECG Viewport Vertical Padding"]})}G=O;function X(){window.addEventListener("resize",b),window.ResizeObserver&&new ResizeObserver(b).observe(E.parentElement||E)}function b(){if(!a)return;const e=E.parentElement.getBoundingClientRect();a.updateDimensions(e.width,e.height),G&&G()}function Y(){f&&(f.value=t["Internal: Initial Heart Rate"],f.addEventListener("input",()=>{const e=+f.value;a&&(a.setManualHeartRate(e),a.setHeartRateMode("manual")),i&&i.setHeartRate1(e),v&&(v.textContent=e),h&&(h.textContent=e),ae()}))}function Z(){Object.keys(l).forEach(e=>{const n=document.getElementById(`counter-${e}`);if(n){const o=n.parentElement;H(o,e)}}),Object.keys(l).forEach(e=>{const n=document.getElementById(`counter-${e}`);if(n){const o=n.parentElement;o.addEventListener("click",()=>K(e,o))}})}function K(e,n){l[e]=!l[e],H(n,e),i&&i.setActivityLevels({[e]:l[e]?1:0})}function H(e,n){const o=l[n],s=e.querySelector(".signal-type-counter"),r=e.querySelector(".signal-type-label");o?(e.className="signal-type-item active",s.style.color="var(--accent, #00ff6a)",s.style.textShadow="0 0 10px rgba(0,255,106,0.5)",r.style.color="var(--accent, #00ff6a)"):(e.className="signal-type-item inactive",s.style.color="var(--text-dim, #666)",s.style.textShadow="none",r.style.color="var(--text-dim, #666)")}function ee(){const e=m.getBoundingClientRect();i=new $(m,{mode:t["Internal: Signal Mode"],heartRate1:t["Internal: Initial Heart Rate"],heartRate2:t["Internal: Signal Secondary Heart Rate"],fadeRate:t["Signal: Fade Rate"].value,renderWidth:e.width,renderHeight:e.height}),i.setActivityLevels({a1:1,a:0,b:0,c:0,d:0,e:0,f:0}),ne(),U(),Z(),te(),i.animate(),j({title:"Signal Single Configuration"})}function te(){const e=()=>{i&&a&&C?(z(),i.animate(),C&&!C.isRunning&&C.start(),M()):setTimeout(e,50)};e()}function ne(){window.addEventListener("resize",x),window.ResizeObserver&&new ResizeObserver(x).observe(m)}function x(){if(!i)return;const e=m.getBoundingClientRect();i.updateDimensions(e.width,e.height)}let S=null;function z(){S=performance.now()}function u(e,n){const o=e/6e4;return Math.floor(n*o)}function ae(){if(S&&z(),a){const e=+f.value;a.setManualHeartRate(e),a.setHeartRateMode("manual")}}function M(){if(!i||!S)return;const n=performance.now()-S,o=+f.value,s=u(o,n);R&&(R.textContent=s);const r=o,P=t["Internal: Signal Rate 2 BPM"],T=l.a1?u(r,n):0;let w=0;l.a&&t["Internal: Signal A Offsets"].forEach(d=>{const D=Math.max(0,n-d*1e3);w+=u(r,D)});const L=w,k=l.b?u(P,Math.max(0,n-t["Internal: Signal B Offset"])):0,A=["c","d","e","f"],F=t["Internal: Signal CF Offsets"];A.forEach((g,d)=>{l[g]&&Math.max(0,n-F[d]*1e3)}),c.a1=T,c.a=L,c.b=k;const p=t["Internal: Signal CF Individual Offsets"];c.c=l.c?u(r,Math.max(0,n-p[0])):0,c.d=l.d?u(r,Math.max(0,n-p[1])):0,c.e=l.e?u(r,Math.max(0,n-p[2])):0,c.f=l.f?u(r,Math.max(0,n-p[3])):0,Object.keys(c).forEach(g=>{const d=document.getElementById(`counter-${g}`);d&&(d.textContent=c[g])});const V=Object.values(c).reduce((g,d)=>g+d,0);I&&(I.textContent=Q(V)),requestAnimationFrame(M)}document.addEventListener("DOMContentLoaded",()=>{try{const e=document.getElementById("ecg-hr");e&&(e.value=t["Internal: Initial Heart Rate"]),ee(),window.signalSingleInstance={renderer:i}}catch(e){console.error("Failed to initialize SignalSingle:",e),re(e)}});function re(e){const n=document.createElement("div");Object.assign(n.style,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",background:"rgba(255, 0, 0, 0.9)",color:"white",padding:"20px",borderRadius:"10px",fontFamily:"monospace",maxWidth:"80vw",maxHeight:"80vh",overflow:"auto"}),n.innerHTML=`
    <h2>Initialization Error</h2>
    <pre style="white-space: pre-wrap; word-wrap: break-word;">${e.message}</pre>
    <pre style="white-space: pre-wrap; word-wrap: break-word;">${e.stack}</pre>
  `,document.body.appendChild(n)}
