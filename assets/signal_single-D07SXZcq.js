import{r as W,c as j}from"./overlayControls-BYAzFYj-.js";/* empty css              */import{S as $}from"./signalBatchRenderer-DOaJURxi.js";import{h as x,d as q,e as N,M as _,B as J}from"./color-1P8gJ9uY.js";import"./signalSquare-CzoGnx3u.js";const n={"Signal Fade Rate":{value:1,type:"range",min:.1,max:3,step:.1,label:"Signal Fade Rate",section:"Signal Display"},"ECG Trace Width":{value:4,type:"range",min:.5,max:16,step:.1,label:"Trace Width",section:"ECG Trace"},"ECG Head Size":{value:10,type:"range",min:2,max:28,step:.5,label:"Head Dot Size",section:"ECG Trace"},"ECG Trail Life":{value:65,type:"range",min:5,max:200,step:1,label:"Trail Life (%)",section:"ECG Trace"},"ECG Overlap":{value:15,type:"range",min:0,max:80,step:1,label:"Overlap (%)",section:"ECG Trace"},"ECG Trace Color":{value:"#00ff6a",type:"color",label:"Trace Color",section:"ECG Trace"},"ECG Grid Size":{value:100,type:"range",min:20,max:160,step:2,label:"Grid Size",section:"ECG Grid"},"ECG Show Outer Box":{value:!0,type:"checkbox",label:"Show Outer Box",section:"ECG Grid"},"ECG Show Grid Lines":{value:!0,type:"checkbox",label:"Show Grid Lines",section:"ECG Grid"},"Internal: ECG Sample Resolution":3200,"Internal: ECG Viewport Horizontal Padding":.02,"Internal: ECG Viewport Vertical Padding":.02,"Internal: ECG Heart Rate Drift":!1,"Internal: ECG Show Grid":!0,"Internal: ECG Grid Color":"#00ff6a","Internal: ECG Grid Color Major":"#00ff6a","Internal: ECG Grid Color Panel":"#00ff6a","Internal: ECG Show Grid Background":!0,"Internal: ECG Grid Gap Percent":0,"Internal: Signal Secondary Heart Rate":26,"Internal: Signal Mode":"single","Internal: Signal Rate 2 BPM":26,"Internal: Initial Heart Rate":62,"Internal: Signal A Offsets":[.1,.2,.3,.4],"Internal: Signal B Offset":50,"Internal: Signal CF Offsets":[.15,.3,.45,.6],"Internal: Signal CF Individual Offsets":[150,300,450,600]};W("config",n,{onChange:(e,t,o)=>{if(e==="Signal Fade Rate"){r&&r.setFadeRate(t);return}if(["ECG Trace Width","ECG Head Size","ECG Trail Life","ECG Overlap","ECG Trace Color","ECG Grid Size","ECG Show Outer Box","ECG Show Grid Lines"].includes(e)){if(!a)return;const i={};e==="ECG Trace Width"?i.lineWidth=t:e==="ECG Head Size"?i.headDotRadius=t:e==="ECG Trail Life"?i.trailLifePercent=t:e==="ECG Overlap"?i.overlapPercent=t:e==="ECG Trace Color"?(i.colorCore=x(t,.95),a._colorCore=new Float32Array(a.cfg.colorCore)):(e==="ECG Grid Size"||e==="ECG Show Outer Box"||e==="ECG Show Grid Lines")&&E&&E(),Object.keys(i).length>0&&a.updateConfig(i);return}}});function Q(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}const m=document.getElementById("single-container"),I=document.getElementById("single-pulses"),H=document.getElementById("ecg-grid-canvas"),G=document.getElementById("ecg-trace-canvas"),h=document.getElementById("ecg-bpm"),R=document.getElementById("ecg-beats"),f=document.getElementById("ecg-hr"),S=document.getElementById("ecg-val-hr");let r=null,l={a1:!0,a:!1,b:!1,c:!1,d:!1,e:!1,f:!1},c={a1:0,a:0,b:0,c:0,d:0,e:0,f:0},a=null,C=null,E=null;function U(){!G||!H||N({sampleResolution:n["Internal: ECG Sample Resolution"]}).then(()=>{requestAnimationFrame(()=>{const t=G.parentElement.getBoundingClientRect(),o={rows:1,cols:1,heartRateMode:"manual",manualHeartRate:n["Internal: Initial Heart Rate"],overlapPercent:n["ECG Overlap"].value,trailLifePercent:n["ECG Trail Life"].value,lineWidth:n["ECG Trace Width"].value,headDotRadius:n["ECG Head Size"].value,colorCore:x(n["ECG Trace Color"].value,.95),gridSize:n["ECG Grid Size"].value,showGrid:n["Internal: ECG Show Grid"],gridColor:n["Internal: ECG Grid Color"],renderWidth:t.width,renderHeight:t.height,viewportHorizontalPadding:n["Internal: ECG Viewport Horizontal Padding"],viewportVerticalPadding:n["Internal: ECG Viewport Vertical Padding"],heartRateDrift:n["Internal: ECG Heart Rate Drift"]};a=new _(G,o),C=new J(a),C.start(),B(),a.traces[0],a.setHeartRateMode("manual"),a.setManualHeartRate(n["Internal: Initial Heart Rate"]),r&&r.setHeartRate1(n["Internal: Initial Heart Rate"]),setTimeout(()=>{const s=n["Internal: Initial Heart Rate"];S&&(S.textContent=s),h&&(h.textContent=s),f&&(f.value=s)},50),X(),Y()})})}function B(){q(H,{rows:1,cols:1,gridSize:n["ECG Grid Size"].value,gridColorMajor:n["Internal: ECG Grid Color Major"],gridColorPanel:n["Internal: ECG Grid Color Panel"],showGridOuterBox:n["ECG Show Outer Box"].value,showGridLines:n["ECG Show Grid Lines"].value,showGridBackground:n["Internal: ECG Show Grid Background"],gridGapPercent:n["Internal: ECG Grid Gap Percent"],viewportHorizontalPadding:n["Internal: ECG Viewport Horizontal Padding"],viewportVerticalPadding:n["Internal: ECG Viewport Vertical Padding"]})}E=B;function X(){window.addEventListener("resize",b),window.ResizeObserver&&new ResizeObserver(b).observe(G.parentElement||G)}function b(){if(!a)return;const e=G.parentElement.getBoundingClientRect();a.updateDimensions(e.width,e.height),E&&E()}function Y(){f&&(f.value=n["Internal: Initial Heart Rate"],f.addEventListener("input",()=>{const e=+f.value;a&&(a.setManualHeartRate(e),a.setHeartRateMode("manual")),r&&r.setHeartRate1(e),S&&(S.textContent=e),h&&(h.textContent=e),ae()}))}function Z(){Object.keys(l).forEach(e=>{const t=document.getElementById(`counter-${e}`);if(t){const o=t.parentElement;O(o,e)}}),Object.keys(l).forEach(e=>{const t=document.getElementById(`counter-${e}`);if(t){const o=t.parentElement;o.addEventListener("click",()=>K(e,o))}})}function K(e,t){l[e]=!l[e],O(t,e),r&&r.setActivityLevels({[e]:l[e]?1:0})}function O(e,t){const o=l[t],s=e.querySelector(".signal-type-counter"),i=e.querySelector(".signal-type-label");o?(e.className="signal-type-item active",s.style.color="var(--accent, #00ff6a)",s.style.textShadow="0 0 10px rgba(0,255,106,0.5)",i.style.color="var(--accent, #00ff6a)"):(e.className="signal-type-item inactive",s.style.color="var(--text-dim, #666)",s.style.textShadow="none",i.style.color="var(--text-dim, #666)")}function ee(){const e=m.getBoundingClientRect();if(r=new $(m,{mode:n["Internal: Signal Mode"],heartRate1:n["Internal: Initial Heart Rate"],heartRate2:n["Internal: Signal Secondary Heart Rate"],fadeRate:n["Signal Fade Rate"].value,renderWidth:e.width,renderHeight:e.height}),r.setActivityLevels({a1:1,a:0,b:0,c:0,d:0,e:0,f:0}),ne(),U(),Z(),te(),r&&a){const t=n["Internal: Initial Heart Rate"];r.setHeartRate1(t),a.setManualHeartRate(t),a.setHeartRateMode("manual")}r.animate(),j({title:"Signal Single Configuration"})}function te(){const e=()=>{r&&a&&C?(z(),r.animate(),C&&!C.isRunning&&C.start(),T()):setTimeout(e,50)};e()}function ne(){window.addEventListener("resize",y),window.ResizeObserver&&new ResizeObserver(y).observe(m)}function y(){if(!r)return;const e=m.getBoundingClientRect();r.updateDimensions(e.width,e.height)}let v=null;function z(){v=performance.now()}function u(e,t){const o=e/6e4;return Math.floor(t*o)}function ae(){if(v&&z(),a){const e=+f.value;a.setManualHeartRate(e),a.setHeartRateMode("manual")}}function T(){if(!r||!v)return;const t=performance.now()-v,o=+f.value,s=u(o,t);R&&(R.textContent=s);const i=o,M=n["Internal: Signal Rate 2 BPM"],P=l.a1?u(i,t):0;let w=0;l.a&&n["Internal: Signal A Offsets"].forEach(d=>{const D=Math.max(0,t-d*1e3);w+=u(i,D)});const L=w,k=l.b?u(M,Math.max(0,t-n["Internal: Signal B Offset"])):0,A=["c","d","e","f"],F=n["Internal: Signal CF Offsets"];A.forEach((g,d)=>{l[g]&&Math.max(0,t-F[d]*1e3)}),c.a1=P,c.a=L,c.b=k;const p=n["Internal: Signal CF Individual Offsets"];c.c=l.c?u(i,Math.max(0,t-p[0])):0,c.d=l.d?u(i,Math.max(0,t-p[1])):0,c.e=l.e?u(i,Math.max(0,t-p[2])):0,c.f=l.f?u(i,Math.max(0,t-p[3])):0,Object.keys(c).forEach(g=>{const d=document.getElementById(`counter-${g}`);d&&(d.textContent=c[g])});const V=Object.values(c).reduce((g,d)=>g+d,0);I&&(I.textContent=Q(V)),requestAnimationFrame(T)}document.addEventListener("DOMContentLoaded",()=>{try{const e=document.getElementById("ecg-hr");e&&(e.value=n["Internal: Initial Heart Rate"]),ee(),window.signalSingleInstance={renderer:r}}catch(e){console.error("Failed to initialize SignalSingle:",e),re(e)}});function re(e){const t=document.createElement("div");Object.assign(t.style,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",background:"rgba(255, 0, 0, 0.9)",color:"white",padding:"20px",borderRadius:"10px",fontFamily:"monospace",maxWidth:"80vw",maxHeight:"80vh",overflow:"auto"}),t.innerHTML=`
    <h2>Initialization Error</h2>
    <pre style="white-space: pre-wrap; word-wrap: break-word;">${e.message}</pre>
    <pre style="white-space: pre-wrap; word-wrap: break-word;">${e.stack}</pre>
  `,document.body.appendChild(t)}
